#seq function to create a sequence of numbers:
seq(8, 2, by = -2)
8 6 4 2

seq(1, 10, by = 3)
1 4 7 10

#rep function replicates an array
rep(c(2, 4, 6), times = 2)
2 4 6 2 4 6

#rep function can be used to replicate elements
rep(c(2, 4, 6), each = 2)
2 2 4 4 6 6

#sort function is used to sort arrays
sort(c(6, 8, 2, 4))
2 4 6 8
#sort by decreasing order:
sort(c(6, 8, 2, 4), decreasing = TRUE)
8 6 4 2

#is. functions are used to check object data types
mylist <- list(c(1,2), TRUE, x=2)
is.list(mylist)
TRUE

#as. function is used to convert data types
array <- c(1, 2, 3)
is.list(array) returns FALSE
list <- as.list(array) #converts array to a list
> list
[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 3

#Exercise: for example we can convert lists to arrays (vectors)
linkedin <- list(16, 9, 13, 5, 2, 17, 14)
facebook <- list(17, 7, 5, 16, 8, 13, 14)
# Convert linkedin and facebook to a vector: li_vec and fb_vec
li_vec <- as.vector(linkedin)
fb_vec <- as.array(facebook) #as.array is same as as.vector
#however as.vector does not work on lists so we need to use unlist


#append and rev functions
#rev function reverses the order of a list or array
rev(c(2, 4, 6))
6 4 2 
append(c(2, 4, 6), 8) #adds a new element
2 4 6 8

##Exercises:
#sum of a sequence
# Create first sequence: seq1
seq1 <- seq(1, 500, by = 3)

# Create second sequence: seq2
seq2 <- seq(1200, 900, by = -7)

# Calculate total sum of the sequences
sum(c(seq1,seq2))
